# handlers/main_menu.py

from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
)
from utils.formatter import format_text
from models import Draft

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–ø—Ü–∏–∏ –º–µ–Ω—é
MAIN_MENU_OPTIONS = [
    ['‚úèÔ∏è –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç'],
    ['üìù –ß–µ—Ä–Ω–æ–≤–∏–∫–∏']
]

# –°–æ–∑–¥–∞—ë–º —Ä–∞–∑–º–µ—Ç–∫—É –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu_markup = ReplyKeyboardMarkup(MAIN_MENU_OPTIONS, resize_keyboard=True, one_time_keyboard=True)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è ConversationHandler
MAIN_MENU, POST_TITLE = range(2)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    user_first_name = update.effective_user.first_name
    welcome_message = (
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_first_name}! üëã\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–±–ª–æ–Ω—É.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∏–∂–µ:"
    )
    
    await update.message.reply_text(
        welcome_message,
        reply_markup=main_menu_markup
    )
    
    return MAIN_MENU  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ MAIN_MENU –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏

async def main_menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤.
    """
    user_choice = update.message.text.lower()
    
    if user_choice == '‚úèÔ∏è —Å–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç':
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –ø—Ä–æ—Ü–µ—Å—Å—É —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞
        await update.message.reply_text(
            "–û—Ç–ª–∏—á–Ω–æ! –ù–∞—á–Ω—ë–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞.",
            reply_markup=ReplyKeyboardRemove()  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        )
        return POST_TITLE  # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ POST_TITLE –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞
    
    elif user_choice == 'üìù —á–µ—Ä–Ω–æ–≤–∏–∫–∏':
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤
        await view_drafts(update, context)
        return MAIN_MENU  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ—Å–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤
    
    else:
        # –ï—Å–ª–∏ –≤—ã–±–æ—Ä –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –ø—Ä–æ—Å–∏–º –≤—ã–±—Ä–∞—Ç—å —Å–Ω–æ–≤–∞
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.",
            reply_markup=main_menu_markup
        )
        return MAIN_MENU

async def view_drafts(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –µ–≥–æ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤.
    """
    session = context.bot_data.get('db_session')  # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ bot_data
    user_id = update.effective_user.id
    
    if not session:
        await update.message.reply_text(
            "–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.",
            reply_markup=main_menu_markup
        )
        return
    
    drafts = session.query(Draft).filter(Draft.user_id == user_id).all()
    
    if not drafts:
        await update.message.reply_text(
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤.",
            reply_markup=main_menu_markup
        )
    else:
        response = "–í–∞—à–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∏:\n\n"
        for draft in drafts:
            response += f"üìù <b>–ß–µ—Ä–Ω–æ–≤–∏–∫ {draft.id}</b>\n"
            response += f"üì¢ <b>{format_text(draft.title)}</b>\n"
            response += f"üìÖ –î–∞—Ç–∞: {format_text(draft.date)}\n\n"
        
        await update.message.reply_text(
            response,
            parse_mode='HTML',
            reply_markup=main_menu_markup
        )
    
    # –ù–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ bot_data –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏

def main_menu_handlers() -> list:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    """
    return [
        CommandHandler('start', start),
        MessageHandler(filters.TEXT & ~filters.COMMAND, main_menu_handler)
    ]
