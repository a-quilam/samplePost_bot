# handlers/drafts.py

from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    ContextTypes,
    CallbackQueryHandler,
)
from models import Draft
from sqlalchemy.orm import Session
from config import ADMIN_IDS, REVIEW_CHAT_ID
from utils.formatter import format_text

def build_drafts_message(drafts: list) -> (str, InlineKeyboardMarkup):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤.
    """
    if not drafts:
        return "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤.", None
    
    message_text = "üìÑ <b>–í–∞—à–∏ —á–µ—Ä–Ω–æ–≤–∏–∫–∏:</b>\n\n"
    keyboard = []
    
    for draft in drafts:
        message_text += f"üìù <b>–ß–µ—Ä–Ω–æ–≤–∏–∫ {draft.id}</b>\n"
        message_text += f"üì¢ {format_text(draft.title)}\n"
        message_text += f"üìÖ {format_text(draft.date)}\n"
        message_text += f"‚è∞ {format_text(draft.time_start)} - {format_text(draft.time_end)}\n"
        message_text += f"üìç {format_text(draft.place_name)}\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–≥–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∞
        keyboard.append([InlineKeyboardButton(f"‚ùå –£–¥–∞–ª–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫ {draft.id}", callback_data=f'delete_{draft.id}')])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard.append([InlineKeyboardButton("‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='main_menu')])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    return message_text, reply_markup

async def view_drafts(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –µ–≥–æ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.
    """
    user_id = update.effective_user.id
    session: Session = context.bot_data['db_session']
    
    drafts = session.query(Draft).filter(Draft.user_id == user_id).all()
    
    message_text, reply_markup = build_drafts_message(drafts)
    
    await update.message.reply_text(
        message_text,
        parse_mode='HTML',
        reply_markup=reply_markup
    )

async def delete_draft(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –£–¥–∞–ª—è–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫ –ø–æ ID –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    query = update.callback_query
    await query.answer()
    
    data = query.data
    if not data.startswith('delete_'):
        await query.edit_message_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
        return
    
    draft_id = int(data.split('_')[1])
    user_id = query.from_user.id
    session: Session = context.bot_data['db_session']
    
    draft = session.query(Draft).filter(Draft.id == draft_id, Draft.user_id == user_id).first()
    
    if draft:
        session.delete(draft)
        session.commit()
        await query.edit_message_text(f"–ß–µ—Ä–Ω–æ–≤–∏–∫ {draft_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.")
        
        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤
        drafts = session.query(Draft).filter(Draft.user_id == user_id).all()
        message_text, reply_markup = build_drafts_message(drafts)
        
        if drafts:
            await query.message.reply_text(
                message_text,
                parse_mode='HTML',
                reply_markup=reply_markup
            )
        else:
            await query.message.reply_text(
                "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤.",
                reply_markup=None
            )
    else:
        await query.edit_message_text("–ß–µ—Ä–Ω–æ–≤–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è.")
    
    session.close()

def drafts_handlers() -> list:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞–º–∏.
    """
    return [
        CallbackQueryHandler(delete_draft, pattern=r'^delete_\d+$'),
        CallbackQueryHandler(view_drafts, pattern='^main_menu$'),
    ]
